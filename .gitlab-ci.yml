cache:
  paths:
    - node_modules/

stages:
  - integrate
  - package
  # - deploy

variables:
  # defined in GitLab project configuration (Settings > CI/CD > Variables)
  # CONTAINER_REGISTRY_PASSWD
  # CONTAINER_REGISTRY_USER
  # CONTAINER_REGISTRY_DOMAIN
  # CONTAINER_REGISTRY_FOLDER
  # framework and language versions
  ANGULAR_CLI_VERSION: 14.1.0
  # container information
  CONTAINER_REPOSITORY: "$CONTAINER_REGISTRY_DOMAIN/$CONTAINER_REGISTRY_FOLDER/ecorp-frontend-demo"
  CONTAINER_APP_VERSION: "1.0.$CI_PIPELINE_ID"

code-quality:
  image:
    name: node:lts
  stage: integrate
  variables:
    CHROME_BIN: /usr/bin/google-chrome
  script:
    # displays system information
    - cat /etc/issue
    - node --version
    # adds linux packages (chrome)
    - apt-get update
    - apt-get install -y wget
    - wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add -
    - echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list
    - apt-get update
    - apt-get -y install -y google-chrome-stable
    # installs npm tools
    - npm cache clean --force
    - npm install -g @angular/cli@$ANGULAR_CLI_VERSION
    # installs packages and runs code quality tools
    - npm install
    - ng lint
    - npm run test:ci
  artifacts:
    when: always
    paths:
      - "**/TESTS-*.xml"
      - coverage/*
    reports:
      cobertura: coverage/cobertura-coverage.xml
      # needs GitLab 14.9 (https://docs.gitlab.com/ee/ci/yaml/artifacts_reports.html#artifactsreportscoverage_report)
      # coverage_report:
      #   coverage_format: cobertura
      #   path: coverage/cobertura-coverage.xml
      junit:
        - "**/TESTS-*.xml"
  # only:
  #   refs:
  #     - merge_requests
  #   variables:
  #     - $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "develop" || $CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^release\/.*$/
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: always
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_PIPELINE_SOURCE == "web"
      when: manual
      allow_failure: true

container-image:
  image:
    name: quay.io/containers/podman
  stage: package
  variables:
  script:
    - podman build --format docker -f Dockerfile -t $CONTAINER_REPOSITORY:$CONTAINER_APP_VERSION .
    - podman login -u $CONTAINER_REGISTRY_USER -p $CONTAINER_REGISTRY_PASSWD $CONTAINER_REGISTRY_DOMAIN
    - podman push $CONTAINER_REPOSITORY:$CONTAINER_APP_VERSION
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      when: always
    - if: $CI_PIPELINE_SOURCE == "web"
      when: always
